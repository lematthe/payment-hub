{"version":3,"sources":["logo.svg","components/acks.js","components/txs.js","components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Acks","acks","class","role","id","scope","map","ack","ackID","txID","confirmedAmount","ackNotes","ackStatus","Txs","txs","tx","txType","requestedAmount","txState","countryCode","instituitionID","MainPage","props","state","activeTabKey","isBox","processed","handleTabClick","event","tabIndex","setState","fetch","then","res","json","data","catch","console","log","this","Tabs","activeKey","onSelect","Tab","eventKey","title","TabTitleText","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5563bf22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\n\nconst Acks = ({ acks }) => {\n    return (\n        <div>\n            <table class=\"pf-c-table pf-m-grid-md\" role=\"grid\" aria-label=\"Orphaned Acknowledgements\" id=\"table-basic\" >\n                <caption>Orphaned Acknowledgements</caption>\n                <thead>\n                    <tr role=\"row\">\n                        <th role=\"columnheader\" scope=\"col\">Acknowledgment ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Transaction ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Confirmed Amount</th>\n                        <th role=\"columnheader\" scope=\"col\">Notes</th>\n                        <th role=\"columnheader\" scope=\"col\">Status</th>\n                    </tr>\n                </thead>\n                    {acks?.map((ack) => (\n                        <tbody role=\"rowgroup\">\n                            <tr role=\"row\">\n                                <td role=\"cell\" data-label=\"Acknowledgement ID\">{ack.ackID}</td>\n                                <td role=\"cell\" data-label=\"Transaction ID\">{ack.txID}</td>\n                                <td role=\"cell\" data-label=\"Confirmed Amount\">{ack.confirmedAmount}</td>\n                                <td role=\"cell\" data-label=\"Status\">{ack.ackNotes}</td>\n                                <td role=\"cell\" data-label=\"Notes\">{ack.ackStatus}</td>\n                            </tr>\n                        </tbody>\n                    ))}\n                }\n            </table>\n        </div>\n\n    )\n};\n\nexport default Acks\n","import React from 'react'\n\n\nconst Txs = ({ txs }) => {\n    return (\n        <div>\n            <table class=\"pf-c-table pf-m-grid-md\" role=\"grid\" aria-label=\"Orphaned Transactions\" id=\"table-basic\" >\n                <caption>Orphaned Transactions</caption>\n                <thead>\n                    <tr role=\"row\">\n                        <th role=\"columnheader\" scope=\"col\">Transaction ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Transaction Type</th>\n                        <th role=\"columnheader\" scope=\"col\">Requested Amount</th>\n                        <th role=\"columnheader\" scope=\"col\">State</th>\n                        <th role=\"columnheader\" scope=\"col\">Country Code</th>\n                        <th role=\"columnheader\" scope=\"col\">Institution ID</th>\n                        private String txID;\n                    </tr>\n                </thead>\n                    {txs?.map((tx) => (\n                        <tbody role=\"rowgroup\">\n                            <tr role=\"row\">\n                                <td role=\"cell\" data-label=\"Transaction ID\">{tx.txID}</td>                                \n                                <td role=\"cell\" data-label=\"Transaction Type\">{tx.txType}</td>\n                                <td role=\"cell\" data-label=\"Requested Amount\">{tx.requestedAmount}</td>\n                                <td role=\"cell\" data-label=\"State\">{tx.txState}</td>\n                                <td role=\"cell\" data-label=\"Country Code\">{tx.countryCode}</td>\n                                <td role=\"cell\" data-label=\"Institution ID\">{tx.instituitionID}</td>\n                            </tr>\n                        </tbody>\n                    ))}\n                }\n            </table>\n        </div>\n\n    )\n};\n\nexport default Txs\n","import React from 'react';\nimport { Tabs, Tab, TabTitleText, Checkbox } from '@patternfly/react-core';\nimport Acks from './acks'\nimport Txs from './txs'\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTabKey: 0,\n            isBox: false,\n            acks: [],\n            txs: [],\n            processed: []\n        };\n        // Toggle currently active tab\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex\n            });\n            switch(tabIndex) {\n                case 0:\n                    fetch('/ack')\n                    .then(res => res.json())\n                    .then((data) => {\n                        this.setState({ acks: data })\n                    })\n                    .catch(console.log)\n\n                    break;\n                case 1:\n                    fetch('/tx')\n                    .then(res => res.json())\n                    .then((data) => {\n                        this.setState({ txs: data })\n                    })\n                    .catch(console.log)\n\n                    break;\n            }\n        };\n    }\n\n    render() {\n        const { activeTabKey, isBox } = this.state;\n\n        return (\n            <div>\n                <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n                    <Tab eventKey={0} title={<TabTitleText>Orphaned Acknowledgements</TabTitleText>}>\n                        <Acks acks={this.state.acks} />\n                    </Tab>\n                    <Tab eventKey={1} title={<TabTitleText>Orphaned Transactions</TabTitleText>}>\n                        <Txs txs={this.state.txs} />\n                    </Tab>\n                    <Tab eventKey={2} title={<TabTitleText>Processed Transactions</TabTitleText>}>\n                        Database\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default MainPage","import logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport React, {Component} from 'react';\nimport MainPage from './components/MainPage'\n\nclass App extends Component{\n  \n  render() {\n    return (\n      <div>\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@patternfly/patternfly/patternfly.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}