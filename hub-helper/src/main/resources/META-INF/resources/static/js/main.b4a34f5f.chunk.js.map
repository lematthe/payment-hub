{"version":3,"sources":["logo.svg","images/Logo-RedHat-D-Color-RGB.png","components/acks.js","components/txs.js","components/processed.js","components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Acks","acks","length","class","role","id","scope","map","ack","ackID","txID","confirmedAmount","ackNotes","ackStatus","Txs","txs","tx","txType","requestedAmount","txState","countryCode","institutionID","Processed","processed","psd","txid","ackid","MainPage","props","state","activeTabKey","isBox","handleTabClick","event","tabIndex","setState","fetch","then","res","json","data","catch","console","log","this","headerTools","PageHeaderTools","PageHeaderToolsGroup","visibility","default","lg","PageHeaderToolsItem","Header","PageHeader","logo","Brand","src","rhLogo","alt","Page","header","Tabs","activeKey","onSelect","Tab","eventKey","title","TabTitleText","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4a34f5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/Logo-RedHat-D-Color-RGB.735dccb4.png\";","import React from 'react'\n\n\nconst Acks = ({ acks }) => {\n    return (\n        <div>\n            <div><h2>Number of Orphaned Acknowledgements: {acks.length}</h2></div>\n            <table class=\"pf-c-table pf-m-grid-md\" role=\"grid\" aria-label=\"Orphaned Acknowledgements\" id=\"table-basic\" >\n                <caption>Orphaned Acknowledgements</caption>\n                <thead>\n                    <tr role=\"row\">\n                        <th role=\"columnheader\" scope=\"col\">Acknowledgment ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Transaction ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Confirmed Amount</th>\n                        <th role=\"columnheader\" scope=\"col\">Notes</th>\n                        <th role=\"columnheader\" scope=\"col\">Status</th>\n                    </tr>\n                </thead>\n                {acks?.map((ack) => (\n                    <tbody role=\"rowgroup\">\n                        <tr role=\"row\">\n                            <td role=\"cell\" data-label=\"Acknowledgement ID\">{ack.ackID}</td>\n                            <td role=\"cell\" data-label=\"Transaction ID\">{ack.txID}</td>\n                            <td role=\"cell\" data-label=\"Confirmed Amount\">{ack.confirmedAmount}</td>\n                            <td role=\"cell\" data-label=\"Status\">{ack.ackNotes}</td>\n                            <td role=\"cell\" data-label=\"Notes\">{ack.ackStatus}</td>\n                        </tr>\n                    </tbody>\n                ))}\n            </table>\n        </div>\n\n    )\n};\n\nexport default Acks\n","import React from 'react'\n\n\nconst Txs = ({ txs }) => {\n    return (\n        <div>\n            <div><h2>Number of Orphaned Transactions: {txs.length}</h2></div>            \n            <table class=\"pf-c-table pf-m-grid-md\" role=\"grid\" aria-label=\"Orphaned Transactions\" id=\"table-basic\" >\n                <caption>Orphaned Transactions</caption>\n                <thead>\n                    <tr role=\"row\">\n                        <th role=\"columnheader\" scope=\"col\">Transaction ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Transaction Type</th>\n                        <th role=\"columnheader\" scope=\"col\">Requested Amount</th>\n                        <th role=\"columnheader\" scope=\"col\">State</th>\n                        <th role=\"columnheader\" scope=\"col\">Country Code</th>\n                        <th role=\"columnheader\" scope=\"col\">Institution ID</th>\n                    </tr>\n                </thead>\n                {txs?.map((tx) => (\n                    <tbody role=\"rowgroup\">\n                        <tr role=\"row\">\n                            <td role=\"cell\" data-label=\"Transaction ID\">{tx.txID}</td>\n                            <td role=\"cell\" data-label=\"Transaction Type\">{tx.txType}</td>\n                            <td role=\"cell\" data-label=\"Requested Amount\">{tx.requestedAmount}</td>\n                            <td role=\"cell\" data-label=\"State\">{tx.txState}</td>\n                            <td role=\"cell\" data-label=\"Country Code\">{tx.countryCode}</td>\n                            <td role=\"cell\" data-label=\"Institution ID\">{tx.institutionID}</td>\n                        </tr>\n                    </tbody>\n                ))}\n            </table>\n        </div>\n\n    )\n};\n\nexport default Txs\n","import React from 'react'\n\n\nconst Processed = ({ processed }) => {\n    return (\n        <div>\n            <div><h2>Number of Processed Transactions: {processed.length}</h2></div>\n            <table class=\"pf-c-table pf-m-grid-md\" role=\"grid\" aria-label=\"Processed Transactions\" id=\"table-basic\" >\n                <caption>Processed Transactions</caption>\n                <thead>\n                    <tr role=\"row\">\n                        <th role=\"columnheader\" scope=\"col\">Transaction ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Transaction Type</th>\n                        <th role=\"columnheader\" scope=\"col\">Acknowledgement ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Requested Amount</th>\n                        <th role=\"columnheader\" scope=\"col\">State</th>\n                        <th role=\"columnheader\" scope=\"col\">Country Code</th>\n                        <th role=\"columnheader\" scope=\"col\">Institution ID</th>\n                        <th role=\"columnheader\" scope=\"col\">Ack Notes</th>\n                        <th role=\"columnheader\" scope=\"col\">Ack Status</th>\n                    </tr>\n                </thead>\n                {processed?.map((psd) => (\n                    <tbody role=\"rowgroup\">\n                        <tr role=\"row\">\n                            <td role=\"cell\" data-label=\"Transaction ID\">{psd.txid}</td>\n                            <td role=\"cell\" data-label=\"Transaction Type\">{psd.txType}</td>\n                            <td role=\"cell\" data-label=\"Acknowledgement ID\">{psd.ackid}</td>\n                            <td role=\"cell\" data-label=\"Requested Amount\">{psd.requestedAmount}</td>\n                            <td role=\"cell\" data-label=\"State\">{psd.txState}</td>\n                            <td role=\"cell\" data-label=\"Country Code\">{psd.countryCode}</td>\n                            <td role=\"cell\" data-label=\"Institution ID\">{psd.institutionID}</td>\n                            <td role=\"cell\" data-label=\"Notes\">{psd.ackNotes}</td>\n                            <td role=\"cell\" data-label=\"Ack Status\">{psd.ackStatus}</td>\n                        </tr>\n                    </tbody>\n                ))}\n            </table>\n        </div>\n\n    )\n};\n\nexport default Processed\n","import React from 'react';\nimport {\n    Tabs, Tab, TabTitleText, Brand, Page, PageHeader, PageHeaderTools,\n    PageHeaderToolsGroup,\n    PageHeaderToolsItem\n} from '@patternfly/react-core';\nimport rhLogo from '../images/Logo-RedHat-D-Color-RGB.png';\nimport Acks from './acks'\nimport Txs from './txs'\nimport Processed from './processed'\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTabKey: 0,\n            isBox: false,\n            acks: [],\n            txs: [],\n            processed: []\n        };\n        // Toggle currently active tab\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex\n            });\n            switch (tabIndex) {\n                case 0:\n                    fetch('/ack')\n                        .then(res => res.json())\n                        .then((data) => {\n                            this.setState({ acks: data })\n                        })\n                        .catch(console.log)\n\n                    break;\n                case 1:\n                    fetch('/tx')\n                        .then(res => res.json())\n                        .then((data) => {\n                            this.setState({ txs: data })\n                        })\n                        .catch(console.log)\n\n                    break;\n                case 2:\n                    fetch('/processed')\n                        .then(res => res.json())\n                        .then((data) => {\n                            this.setState({ processed: data })\n                        })\n                        .catch(console.log)\n\n                    break;\n            }\n        };\n    }\n\n    render() {\n        const { activeTabKey } = this.state;\n\n        const headerTools = (\n            <PageHeaderTools>\n                <PageHeaderToolsGroup\n                    visibility={{\n                        default: 'hidden',\n                        lg: 'visible'\n                    }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\n                >\n                    <PageHeaderToolsItem>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n                        );\n        const Header = (\n            <PageHeader logo={<Brand src={rhLogo} alt=\"Patternfly Logo\" />} headerTools={headerTools} >Integration Demo </PageHeader>\n        );\n\n        return (\n            <div>\n                <Page header={Header}>\n                <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick}>\n                    <Tab eventKey={0} title={<TabTitleText>Orphaned Acknowledgements</TabTitleText>}>\n                        <Acks acks={this.state.acks} />\n                    </Tab>\n                    <Tab eventKey={1} title={<TabTitleText>Orphaned Transactions</TabTitleText>}>\n                        <Txs txs={this.state.txs} />\n                    </Tab>\n                    <Tab eventKey={2} title={<TabTitleText>Processed Transactions</TabTitleText>}>\n                        <Processed processed={this.state.processed} />\n                    </Tab>\n                </Tabs>\n                </Page>\n            </div>\n        );\n    }\n}\n\nexport default MainPage","import logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport React, {Component} from 'react';\nimport MainPage from './components/MainPage'\n\nclass App extends Component{\n  \n  render() {\n    return (\n      <div>\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@patternfly/patternfly/patternfly.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}